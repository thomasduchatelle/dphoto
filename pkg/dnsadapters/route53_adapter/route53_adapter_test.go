package route53_adapter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/credentials"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/acm"
	"github.com/stretchr/testify/assert"
	"github.com/thomasduchatelle/dphoto/pkg/dnsdomain"
	"testing"
)

func TestCertificateManager(t *testing.T) {
	a := assert.New(t)

	sess := session.Must(session.NewSession(&aws.Config{
		Credentials: credentials.NewStaticCredentials("localstack", "localstack", ""),
		Endpoint:    aws.String("http://localhost:4566"),
		Region:      aws.String("eu-west-1"),
	}))
	certManager := NewCertificateManager(sess, nil, "unittest")

	acmClient := cleanup(sess)

	name := "it should not find any domain"
	domain := "dphoto.example.com"
	_, err := certManager.FindCertificate(domain)
	a.Equal(dnsdomain.CertificateNotFoundError, err, name)

	name = "it should import a certificate"
	err = certManager.InstallCertificate("", dnsdomain.CompleteCertificate{
		Certificate: []byte("-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE-----"),
		PrivateKey:  []byte("-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAzUzKLEYcNZbEmCOpD/u8U9vYZ+lqrE7/PF4mbi1ig33yMF/h\nrpvl/RUTbJppiE5YN3DGaxrCqrPbJtr1Gi+1w4l1S0lvJ6bBVvhpLqCOX2HIjXNL\nhSIRwUH1xgnVKuIljCU5TH1NnEEHVZn5ZRmXzR11vlgZfc/AhxtHVcXeWJwzhnqX\npeVJkrY3pPbeQV1XP0KsPyfKGeahC5NN+YJ9m9qx4HTLTrJ8HYtJKC0VukkuPYrS\nOlnPtDHm3+3LoVzBkyFDYnPVyDtgpd81WvNyspXOXaRIaMqNcduGqMrd0beYpbsa\nQwFwZZfw+CjawUZmktX6Bz6QEo+1mHQAiUz2XQIDAQABAoIBAEnQISR39K6DzZ1R\nvPhFLzoLYixCLRtUr8n5o+GbKb9TKh+gaZkI7lDnIfu7LNRYLrmIL57UmUccsV+v\n+831d2mdY3G1LmTYPM1TNSYRjf7XPm81E+MDE9UjLQWOBXmMo6lWvNo2dxAGBWgO\nmy9xWzXhMLNGI6wrZPJuqWA6ay36Hl81fEpSd12Z+aVpChm8O93B+qWXlJjenDDV\nwtLKrMFyY8L5tDyHSTAL0EHe3J07mhgSDOzS3sm+Ipl7c9QlsKOdLQmk9z9dNWxu\nv1ZA4eCOy5U1H9fSLoM2o1gzdiamFZowmPc9dQ43ijytfL/79Z6P7La0ZB/D4btu\nqq6HM5UCgYEA6XkEvooRchtJ2zmHhkF5ke3Z6Z+ov7liFjC3qoZgRbLbFKGiwXKT\nyZpOnePPY9oBBe1g9u2yXyPpgOgDTg7fm11YZ+75mTyzaj2kHLxO6sCZ743sudp0\nnXBWlr4TRVxdINfp6JjTVIYcQTHjb6ZNd0bN4mcizFa3CpjOrhEXmF8CgYEA4Rvh\nCuca0qGNVQGCcucJ/ErcD4mUgbfz8jyQFywbaUm2bcN7UNtU/YGxuEDo6DrpPeH5\naXOo6R7FfQQjUb0EiLRK8QpwhlrU3RuO6xCb3BjI1pvSDgeYEOkB4jUm4zc9EOG1\nN1wJwMnjkWUftsV7nf4KVpbUPBEyntwMpGhN2sMCgYEAsg/xVVy553v2fTNIMFW5\nYVm1K9/v9KFvtJrdSToJLL83JWoNVlqLamO8d+DqKC55P0sG++zXcIZULVNGSf8/\n/R9ZMJNrW7qW3305sAzSZ2oTPUfR9wEslXK7J2a6Ddle0ZC6vgHok3thCzwASQPd\n6w1eMsEUIiI0oelfIBS7GSMCgYAbFWydEDMk9nT3rkfQpUWJSkRxxh7NAKHkGi9H\n6nGd2FWPnT5f+xOdsJX+Uijzj+ryHBcS/exrp90g7neFZRV/kRmXKKdjMth7hc5L\nL+NgtsarM3IxZ+5+0ln8qmJ0YfgB6PYRpAw0WtX7b0xChD4cQy1hP6JnW7ZYcKdA\nvJ/pWwKBgQCmT6DiuHZsex6dVWp8Z9GdjZelTesxV0PrAVQdUCym1z9E5VESEKDt\nvkbcmm+mZ4FJPcXBgPvQz6zFgdUhtWpa8Bv+/MOX16lgfI5RcoQ7uqZSgL+WzGFk\nxPiXcxIa6WfgUoN1dS8A/toeXNRa+2NwrPIrnSaEhHpvBnMfqq3npg==\n-----END RSA PRIVATE KEY-----"),
	})
	if !a.NoError(err, name) {
		return
	}

	name = "it should find just created certificate"
	cer, err := certManager.FindCertificate(domain)
	if !a.NoError(err) {
		return
	}

	name = "it should override existing certificate by re-importing it"
	err = certManager.InstallCertificate(cer.ID, dnsdomain.CompleteCertificate{
		Certificate: []byte("-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE-----"),
		PrivateKey:  []byte("-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAzUzKLEYcNZbEmCOpD/u8U9vYZ+lqrE7/PF4mbi1ig33yMF/h\nrpvl/RUTbJppiE5YN3DGaxrCqrPbJtr1Gi+1w4l1S0lvJ6bBVvhpLqCOX2HIjXNL\nhSIRwUH1xgnVKuIljCU5TH1NnEEHVZn5ZRmXzR11vlgZfc/AhxtHVcXeWJwzhnqX\npeVJkrY3pPbeQV1XP0KsPyfKGeahC5NN+YJ9m9qx4HTLTrJ8HYtJKC0VukkuPYrS\nOlnPtDHm3+3LoVzBkyFDYnPVyDtgpd81WvNyspXOXaRIaMqNcduGqMrd0beYpbsa\nQwFwZZfw+CjawUZmktX6Bz6QEo+1mHQAiUz2XQIDAQABAoIBAEnQISR39K6DzZ1R\nvPhFLzoLYixCLRtUr8n5o+GbKb9TKh+gaZkI7lDnIfu7LNRYLrmIL57UmUccsV+v\n+831d2mdY3G1LmTYPM1TNSYRjf7XPm81E+MDE9UjLQWOBXmMo6lWvNo2dxAGBWgO\nmy9xWzXhMLNGI6wrZPJuqWA6ay36Hl81fEpSd12Z+aVpChm8O93B+qWXlJjenDDV\nwtLKrMFyY8L5tDyHSTAL0EHe3J07mhgSDOzS3sm+Ipl7c9QlsKOdLQmk9z9dNWxu\nv1ZA4eCOy5U1H9fSLoM2o1gzdiamFZowmPc9dQ43ijytfL/79Z6P7La0ZB/D4btu\nqq6HM5UCgYEA6XkEvooRchtJ2zmHhkF5ke3Z6Z+ov7liFjC3qoZgRbLbFKGiwXKT\nyZpOnePPY9oBBe1g9u2yXyPpgOgDTg7fm11YZ+75mTyzaj2kHLxO6sCZ743sudp0\nnXBWlr4TRVxdINfp6JjTVIYcQTHjb6ZNd0bN4mcizFa3CpjOrhEXmF8CgYEA4Rvh\nCuca0qGNVQGCcucJ/ErcD4mUgbfz8jyQFywbaUm2bcN7UNtU/YGxuEDo6DrpPeH5\naXOo6R7FfQQjUb0EiLRK8QpwhlrU3RuO6xCb3BjI1pvSDgeYEOkB4jUm4zc9EOG1\nN1wJwMnjkWUftsV7nf4KVpbUPBEyntwMpGhN2sMCgYEAsg/xVVy553v2fTNIMFW5\nYVm1K9/v9KFvtJrdSToJLL83JWoNVlqLamO8d+DqKC55P0sG++zXcIZULVNGSf8/\n/R9ZMJNrW7qW3305sAzSZ2oTPUfR9wEslXK7J2a6Ddle0ZC6vgHok3thCzwASQPd\n6w1eMsEUIiI0oelfIBS7GSMCgYAbFWydEDMk9nT3rkfQpUWJSkRxxh7NAKHkGi9H\n6nGd2FWPnT5f+xOdsJX+Uijzj+ryHBcS/exrp90g7neFZRV/kRmXKKdjMth7hc5L\nL+NgtsarM3IxZ+5+0ln8qmJ0YfgB6PYRpAw0WtX7b0xChD4cQy1hP6JnW7ZYcKdA\nvJ/pWwKBgQCmT6DiuHZsex6dVWp8Z9GdjZelTesxV0PrAVQdUCym1z9E5VESEKDt\nvkbcmm+mZ4FJPcXBgPvQz6zFgdUhtWpa8Bv+/MOX16lgfI5RcoQ7uqZSgL+WzGFk\nxPiXcxIa6WfgUoN1dS8A/toeXNRa+2NwrPIrnSaEhHpvBnMfqq3npg==\n-----END RSA PRIVATE KEY-----"),
	})
	if !a.NoError(err, name) {
		return
	}

	certificates, err := acmClient.ListCertificates(&acm.ListCertificatesInput{})
	if err != nil {
		panic(err)
	}
	a.Len(certificates.CertificateSummaryList, 1, name)
}

func TestOnlyFirstCert(t *testing.T) {
	tests := []struct {
		name string
		arg  string
		want string
	}{
		{"it should return empty bytes", "", ""},
		{"it should return original bytes", "foobar", "foobar"},
		{"it should return original certificate",
			"-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE-----",
			"-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE-----"},
		{"it should ignore following certificates",
			"-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE----- \n-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE-----",
			"-----BEGIN CERTIFICATE-----\nMIIC3jCCAcagAwIBAgIJAKAYjRQ9AdhiMA0GCSqGSIb3DQEBBQUAMB0xGzAZBgNV\nBAMTEmRwaG90by5leGFtcGxlLmNvbTAeFw0yMjAyMDIxNjMyMDRaFw0zMjAxMzEx\nNjMyMDRaMB0xGzAZBgNVBAMTEmRwaG90by5leGFtcGxlLmNvbTCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBAM1MyixGHDWWxJgjqQ/7vFPb2GfpaqxO/zxe\nJm4tYoN98jBf4a6b5f0VE2yaaYhOWDdwxmsawqqz2yba9RovtcOJdUtJbyemwVb4\naS6gjl9hyI1zS4UiEcFB9cYJ1SriJYwlOUx9TZxBB1WZ+WUZl80ddb5YGX3PwIcb\nR1XF3licM4Z6l6XlSZK2N6T23kFdVz9CrD8nyhnmoQuTTfmCfZvaseB0y06yfB2L\nSSgtFbpJLj2K0jpZz7Qx5t/ty6FcwZMhQ2Jz1cg7YKXfNVrzcrKVzl2kSGjKjXHb\nhqjK3dG3mKW7GkMBcGWX8Pgo2sFGZpLV+gc+kBKPtZh0AIlM9l0CAwEAAaMhMB8w\nHQYDVR0RBBYwFIISZHBob3RvLmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IB\nAQA8NxhjhB73uJfxdKcZ31wgCnJ5YqkI0WJH2riw2amXFLB0O1AvvHqc2MCxejqr\ncPnYf+PmUmJLLEKeRdazpWGYGXs8UKiM1Ifd8jxJdajJOgWe7I+B4ySVpjHdbGfv\nG37lQkWU+nOplgkM6mH7XtvhHKcUkD2EQAuXXbJhQKMrKxM76LyKTdS2QzyUOCkr\nhkIJW78075INWc78lZc9RueqlhJj+g7MWA5FfVtUw9ud892me7Cj/s1QErC2qImL\nF3vLeJ22/Aywz6IB68mGE2YRBMDS7Iua1mawN9zMXwoXXA5BZKC/idp3zXUwtH2d\nn9x/Z/YXp/HoYwaMFTpO84uZ\n-----END CERTIFICATE----- "},
	}

	for _, tt := range tests {
		assert.Equal(t, []byte(tt.want), onlyFirstCertificate([]byte(tt.arg)), tt.name)
	}
}

func cleanup(sess *session.Session) *acm.ACM {
	acmClient := acm.New(sess)
	certificates, err := acmClient.ListCertificates(&acm.ListCertificatesInput{})
	if err != nil {
		panic(err)
	}

	for _, cer := range certificates.CertificateSummaryList {
		_, err = acmClient.DeleteCertificate(&acm.DeleteCertificateInput{
			CertificateArn: cer.CertificateArn,
		})
		if err != nil {
			panic(err)
		}
	}

	return acmClient
}
