on:
  push:
    branches:
      - develop
      - main

jobs:
  choose-env:
    uses: ./.github/workflows/choose-environment.yml
    with:
      ref: ${{ github.ref_name }}

  provision-data-infrastructure:
    name: Deploy / ${{ needs.choose-env.outputs.environment-name }} / infra-data
    runs-on: ubuntu-latest
    needs: [choose-env]
    environment: ${{ needs.choose-env.outputs.environment-name }}
    env:
      TF_WORKSPACE: ${{ needs.choose-env.outputs.environment-workspace }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup terraform
        uses: ./.github/actions/install-terraform
        with:
          tf-api-token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        id: init
        run: cd infra-data && terraform init

      - name: Terraform apply
        run: cd infra-data && terraform apply -auto-approve

  deploy-app:
    name: Deploy / ${{ needs.choose-env.outputs.environment-name }} / app
    runs-on: ubuntu-latest
    environment: ${{ needs.choose-env.outputs.environment-name }}
    needs:
      - provision-data-infrastructure
      - choose-env
    steps:
      - uses: actions/checkout@v3
      - name: Setup GO
        uses: ./.github/actions/install-go
      - name: Setup NODE
        uses: ./.github/actions/install-node
        with:
          sls: true
      - name: Start mock services
        run: docker-compose up -d

      - name: Test & Build
        run: make clean-app test-app build-app

      - name: Deploy
        run: cd app && sls deploy --stage ${{ needs.choose-env.outputs.environment-workspace }}
        env:
          AWS_DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  cli-tag:
    runs-on: ubuntu-latest
    name: Create a TAG for CLI
    if: needs.choose-env.outputs.environment-name == 'live'
    needs: [choose-env]
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: version
        run: echo "::set-output name=version::$(./ci/pre-release.sh)"
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/dphoto/${{ steps.version.outputs.version }}',
              sha: context.sha
            })
