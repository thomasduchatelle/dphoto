name: Release & Deploy
on:
  push:
    branches:
      - main

jobs:
  test-go:
    uses: ./.github/workflows/job-test-go.yml
  test-ts:
    uses: ./.github/workflows/job-test-ts.yml
  build-go:
    uses: ./.github/workflows/job-build-go.yml
    with:
      snapshot: "false"
  build-ts:
    uses: ./.github/workflows/job-build-ts.yml

  test-cdk:
    uses: ./.github/workflows/job-test-cdk.yml
    with:
      cache-suffix: ${{ github.run_number }}

  deploy-next:
    uses: ./.github/workflows/job-deploy.yml
    needs:
      - test-go
      - test-ts
      - build-go
      - build-ts
      - test-cdk
    secrets: inherit
    with:
      target: next
      cache-suffix: ${{ needs.build-ts.outputs.cache-suffix }}

  deploy-live:
    uses: ./.github/workflows/job-deploy.yml
    needs:
      - test-go
      - test-ts
      - build-go
      - build-ts
      - test-cdk
    secrets: inherit
    with:
      target: live
      cache-suffix: ${{ needs.build-ts.outputs.cache-suffix }}

  release:
    runs-on: ubuntu-latest
    name: Release
    needs:
      - deploy-next
      - deploy-live
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: SemVer
        id: semver
        uses: ./.github/actions/semver

      - name: Changelog
        id: changelog
        uses: ./.github/actions/generate-changelog
        with:
          version: ${{ steps.semver.outputs.version }}
          tf-plan: ${{ needs.deploy-live.outputs.plan }}

      - name: Download CLI
        uses: actions/download-artifact@v4
        with:
          name: bin-cli
          path: bin-cli

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ steps.semver.outputs.version }}',
              sha: context.sha
            })
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
          CHANGELOG: ${{ steps.changelog.outputs.changelog }}
        run: |
          gh release create 'v${{ steps.semver.outputs.version }}' --title 'DPhoto v${{ steps.semver.outputs.version }}' --latest --notes "$CHANGELOG" bin-cli/*
