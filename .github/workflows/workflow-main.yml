name: Release & Deploy
on:
  push:
    branches:
      - main

jobs:
  semver:
    uses: ./.github/workflows/lib-semver.yml

  test-build-web:
    uses: ./.github/workflows/lib-test-build-web.yml
    needs:
      - semver
    with:
      version: ${{ needs.semver.outputs.version }}
      snapshot: ${{ needs.semver.outputs.snapshot }}

  deploy-next:
    needs:
      - semver
      - test-build-web
    uses: ./.github/workflows/lib-deploy.yml
    secrets: inherit
    with:
      target: next

  deploy-live:
    needs:
      - semver
      - test-build-web
    uses: ./.github/workflows/lib-deploy.yml
    secrets: inherit
    with:
      target: live

  cli-tag:
    runs-on: ubuntu-latest
    name: TAGGING Codebase
    needs:
      - semver
      - deploy-next
      - deploy-live
    steps:
      - uses: actions/checkout@v4
      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ needs.semver.outputs.version }}',
              sha: context.sha
            })
      - name: Create release
        run: |
          gh release create 'v${{ needs.semver.outputs.version }}' --generate-notes
#      - name: Create release
#        uses: actions/github-script@v7
#        with:
#          script: |
#            // TODO add the TF plan in the changelog ; with the details of each commit
#            // name: 'DPhoto v${{ needs.semver.outputs.version }}',
#
#            const release = github.rest.repos.createRelease({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              tag_name: 'v${{ needs.semver.outputs.version }}',
#              generate_release_notes: true,
#              make_latest: true,
#            });
#
#            octokit.rest.repos.uploadReleaseAsset({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              release_id,
#              name,
#              data,
#            });
