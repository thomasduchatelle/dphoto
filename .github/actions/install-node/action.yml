name: 'Install and cache NODE'
description: 'Run npm install and yarn install everywhere required and cache node_modules'
inputs:
  sls:
    description: install globally serverless cli
    required: false
    default: 'false'
  build-cache:
    description: build and publish the cache
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: '19'
        # cache: yarn # note - directly caching node_modules is MUCH faster (60s -> 1.5s)
    - name: YARN Cache (restore)
      id: cache-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ~/.npm
          web/node_modules
          deployments/sls/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('.github/actions/install-node/action.yml', 'web/yarn.lock', 'deployments/sls/package-lock.json') }}
        lookup-only: ${{ inputs.build-cache }}
    - name: Download deps
      if: ${{ steps.cache-restore.outputs.cache-hit != 'true' }}
      run: make setup-app
      shell: bash
    - name: Install SLS
      if: ${{ steps.cache-restore.outputs.cache-hit != 'true' && (inputs.sls == 'true' || inputs.build-cache == 'true') }}
      run: npm install -g serverless
      shell: bash
    - name: YARN Cache (always save)
      if: ${{ steps.cache-restore.outputs.cache-hit != 'true' && inputs.build-cache == 'true' }}
      uses: actions/cache/save@v4
      with:
        path: |
          ~/.npm
          web/node_modules
          deployments/sls/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('.github/actions/install-node/action.yml', 'web/yarn.lock', 'deployments/sls/package-lock.json') }}
