// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	catalog "github.com/thomasduchatelle/dphoto/pkg/catalog"

	mock "github.com/stretchr/testify/mock"
)

// MediaTransfer is an autogenerated mock type for the MediaTransfer type
type MediaTransfer struct {
	mock.Mock
}

type MediaTransfer_Expecter struct {
	mock *mock.Mock
}

func (_m *MediaTransfer) EXPECT() *MediaTransfer_Expecter {
	return &MediaTransfer_Expecter{mock: &_m.Mock}
}

// Transfer provides a mock function with given fields: ctx, records
func (_m *MediaTransfer) Transfer(ctx context.Context, records catalog.MediaTransferRecords) error {
	ret := _m.Called(ctx, records)

	if len(ret) == 0 {
		panic("no return value specified for Transfer")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.MediaTransferRecords) error); ok {
		r0 = rf(ctx, records)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MediaTransfer_Transfer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Transfer'
type MediaTransfer_Transfer_Call struct {
	*mock.Call
}

// Transfer is a helper method to define mock.On call
//   - ctx context.Context
//   - records catalog.MediaTransferRecords
func (_e *MediaTransfer_Expecter) Transfer(ctx interface{}, records interface{}) *MediaTransfer_Transfer_Call {
	return &MediaTransfer_Transfer_Call{Call: _e.mock.On("Transfer", ctx, records)}
}

func (_c *MediaTransfer_Transfer_Call) Run(run func(ctx context.Context, records catalog.MediaTransferRecords)) *MediaTransfer_Transfer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.MediaTransferRecords))
	})
	return _c
}

func (_c *MediaTransfer_Transfer_Call) Return(_a0 error) *MediaTransfer_Transfer_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MediaTransfer_Transfer_Call) RunAndReturn(run func(context.Context, catalog.MediaTransferRecords) error) *MediaTransfer_Transfer_Call {
	_c.Call.Return(run)
	return _c
}

// NewMediaTransfer creates a new instance of MediaTransfer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMediaTransfer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MediaTransfer {
	mock := &MediaTransfer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
