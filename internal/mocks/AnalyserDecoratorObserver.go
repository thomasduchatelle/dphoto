// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	backup "github.com/thomasduchatelle/dphoto/pkg/backup"

	mock "github.com/stretchr/testify/mock"
)

// AnalyserDecoratorObserver is an autogenerated mock type for the AnalyserDecoratorObserver type
type AnalyserDecoratorObserver struct {
	mock.Mock
}

type AnalyserDecoratorObserver_Expecter struct {
	mock *mock.Mock
}

func (_m *AnalyserDecoratorObserver) EXPECT() *AnalyserDecoratorObserver_Expecter {
	return &AnalyserDecoratorObserver_Expecter{mock: &_m.Mock}
}

// OnDecoratedAnalyser provides a mock function with given fields: ctx, found, cacheHit
func (_m *AnalyserDecoratorObserver) OnDecoratedAnalyser(ctx context.Context, found backup.FoundMedia, cacheHit bool) error {
	ret := _m.Called(ctx, found, cacheHit)

	if len(ret) == 0 {
		panic("no return value specified for OnDecoratedAnalyser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, backup.FoundMedia, bool) error); ok {
		r0 = rf(ctx, found, cacheHit)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AnalyserDecoratorObserver_OnDecoratedAnalyser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnDecoratedAnalyser'
type AnalyserDecoratorObserver_OnDecoratedAnalyser_Call struct {
	*mock.Call
}

// OnDecoratedAnalyser is a helper method to define mock.On call
//   - ctx context.Context
//   - found backup.FoundMedia
//   - cacheHit bool
func (_e *AnalyserDecoratorObserver_Expecter) OnDecoratedAnalyser(ctx interface{}, found interface{}, cacheHit interface{}) *AnalyserDecoratorObserver_OnDecoratedAnalyser_Call {
	return &AnalyserDecoratorObserver_OnDecoratedAnalyser_Call{Call: _e.mock.On("OnDecoratedAnalyser", ctx, found, cacheHit)}
}

func (_c *AnalyserDecoratorObserver_OnDecoratedAnalyser_Call) Run(run func(ctx context.Context, found backup.FoundMedia, cacheHit bool)) *AnalyserDecoratorObserver_OnDecoratedAnalyser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(backup.FoundMedia), args[2].(bool))
	})
	return _c
}

func (_c *AnalyserDecoratorObserver_OnDecoratedAnalyser_Call) Return(_a0 error) *AnalyserDecoratorObserver_OnDecoratedAnalyser_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AnalyserDecoratorObserver_OnDecoratedAnalyser_Call) RunAndReturn(run func(context.Context, backup.FoundMedia, bool) error) *AnalyserDecoratorObserver_OnDecoratedAnalyser_Call {
	_c.Call.Return(run)
	return _c
}

// NewAnalyserDecoratorObserver creates a new instance of AnalyserDecoratorObserver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAnalyserDecoratorObserver(t interface {
	mock.TestingT
	Cleanup(func())
}) *AnalyserDecoratorObserver {
	mock := &AnalyserDecoratorObserver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
