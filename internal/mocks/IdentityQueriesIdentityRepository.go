// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	aclcore "github.com/thomasduchatelle/dphoto/pkg/acl/aclcore"
)

// IdentityQueriesIdentityRepository is an autogenerated mock type for the IdentityQueriesIdentityRepository type
type IdentityQueriesIdentityRepository struct {
	mock.Mock
}

type IdentityQueriesIdentityRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *IdentityQueriesIdentityRepository) EXPECT() *IdentityQueriesIdentityRepository_Expecter {
	return &IdentityQueriesIdentityRepository_Expecter{mock: &_m.Mock}
}

// FindIdentities provides a mock function with given fields: emails
func (_m *IdentityQueriesIdentityRepository) FindIdentities(emails []string) ([]*aclcore.Identity, error) {
	ret := _m.Called(emails)

	if len(ret) == 0 {
		panic("no return value specified for FindIdentities")
	}

	var r0 []*aclcore.Identity
	var r1 error
	if rf, ok := ret.Get(0).(func([]string) ([]*aclcore.Identity, error)); ok {
		return rf(emails)
	}
	if rf, ok := ret.Get(0).(func([]string) []*aclcore.Identity); ok {
		r0 = rf(emails)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*aclcore.Identity)
		}
	}

	if rf, ok := ret.Get(1).(func([]string) error); ok {
		r1 = rf(emails)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IdentityQueriesIdentityRepository_FindIdentities_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FindIdentities'
type IdentityQueriesIdentityRepository_FindIdentities_Call struct {
	*mock.Call
}

// FindIdentities is a helper method to define mock.On call
//   - emails []string
func (_e *IdentityQueriesIdentityRepository_Expecter) FindIdentities(emails interface{}) *IdentityQueriesIdentityRepository_FindIdentities_Call {
	return &IdentityQueriesIdentityRepository_FindIdentities_Call{Call: _e.mock.On("FindIdentities", emails)}
}

func (_c *IdentityQueriesIdentityRepository_FindIdentities_Call) Run(run func(emails []string)) *IdentityQueriesIdentityRepository_FindIdentities_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]string))
	})
	return _c
}

func (_c *IdentityQueriesIdentityRepository_FindIdentities_Call) Return(_a0 []*aclcore.Identity, _a1 error) *IdentityQueriesIdentityRepository_FindIdentities_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *IdentityQueriesIdentityRepository_FindIdentities_Call) RunAndReturn(run func([]string) ([]*aclcore.Identity, error)) *IdentityQueriesIdentityRepository_FindIdentities_Call {
	_c.Call.Return(run)
	return _c
}

// NewIdentityQueriesIdentityRepository creates a new instance of IdentityQueriesIdentityRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIdentityQueriesIdentityRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IdentityQueriesIdentityRepository {
	mock := &IdentityQueriesIdentityRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
