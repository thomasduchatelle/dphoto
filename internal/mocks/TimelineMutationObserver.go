// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	catalog "github.com/thomasduchatelle/dphoto/pkg/catalog"

	mock "github.com/stretchr/testify/mock"
)

// TimelineMutationObserver is an autogenerated mock type for the TimelineMutationObserver type
type TimelineMutationObserver struct {
	mock.Mock
}

type TimelineMutationObserver_Expecter struct {
	mock *mock.Mock
}

func (_m *TimelineMutationObserver) EXPECT() *TimelineMutationObserver_Expecter {
	return &TimelineMutationObserver_Expecter{mock: &_m.Mock}
}

// Observe provides a mock function with given fields: ctx, transfers
func (_m *TimelineMutationObserver) Observe(ctx context.Context, transfers catalog.TransferredMedias) error {
	ret := _m.Called(ctx, transfers)

	if len(ret) == 0 {
		panic("no return value specified for Observe")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.TransferredMedias) error); ok {
		r0 = rf(ctx, transfers)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TimelineMutationObserver_Observe_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Observe'
type TimelineMutationObserver_Observe_Call struct {
	*mock.Call
}

// Observe is a helper method to define mock.On call
//   - ctx context.Context
//   - transfers catalog.TransferredMedias
func (_e *TimelineMutationObserver_Expecter) Observe(ctx interface{}, transfers interface{}) *TimelineMutationObserver_Observe_Call {
	return &TimelineMutationObserver_Observe_Call{Call: _e.mock.On("Observe", ctx, transfers)}
}

func (_c *TimelineMutationObserver_Observe_Call) Run(run func(ctx context.Context, transfers catalog.TransferredMedias)) *TimelineMutationObserver_Observe_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.TransferredMedias))
	})
	return _c
}

func (_c *TimelineMutationObserver_Observe_Call) Return(_a0 error) *TimelineMutationObserver_Observe_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TimelineMutationObserver_Observe_Call) RunAndReturn(run func(context.Context, catalog.TransferredMedias) error) *TimelineMutationObserver_Observe_Call {
	_c.Call.Return(run)
	return _c
}

// NewTimelineMutationObserver creates a new instance of TimelineMutationObserver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTimelineMutationObserver(t interface {
	mock.TestingT
	Cleanup(func())
}) *TimelineMutationObserver {
	mock := &TimelineMutationObserver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
