// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	backup "github.com/thomasduchatelle/dphoto/pkg/backup"
)

// TrackUploaded is an autogenerated mock type for the TrackUploaded type
type TrackUploaded struct {
	mock.Mock
}

type TrackUploaded_Expecter struct {
	mock *mock.Mock
}

func (_m *TrackUploaded) EXPECT() *TrackUploaded_Expecter {
	return &TrackUploaded_Expecter{mock: &_m.Mock}
}

// OnUploaded provides a mock function with given fields: done, total
func (_m *TrackUploaded) OnUploaded(done backup.MediaCounter, total backup.MediaCounter) {
	_m.Called(done, total)
}

// TrackUploaded_OnUploaded_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OnUploaded'
type TrackUploaded_OnUploaded_Call struct {
	*mock.Call
}

// OnUploaded is a helper method to define mock.On call
//   - done backup.MediaCounter
//   - total backup.MediaCounter
func (_e *TrackUploaded_Expecter) OnUploaded(done interface{}, total interface{}) *TrackUploaded_OnUploaded_Call {
	return &TrackUploaded_OnUploaded_Call{Call: _e.mock.On("OnUploaded", done, total)}
}

func (_c *TrackUploaded_OnUploaded_Call) Run(run func(done backup.MediaCounter, total backup.MediaCounter)) *TrackUploaded_OnUploaded_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(backup.MediaCounter), args[1].(backup.MediaCounter))
	})
	return _c
}

func (_c *TrackUploaded_OnUploaded_Call) Return() *TrackUploaded_OnUploaded_Call {
	_c.Call.Return()
	return _c
}

func (_c *TrackUploaded_OnUploaded_Call) RunAndReturn(run func(backup.MediaCounter, backup.MediaCounter)) *TrackUploaded_OnUploaded_Call {
	_c.Call.Return(run)
	return _c
}

// NewTrackUploaded creates a new instance of TrackUploaded. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTrackUploaded(t interface {
	mock.TestingT
	Cleanup(func())
}) *TrackUploaded {
	mock := &TrackUploaded{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
