// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	catalog "github.com/thomasduchatelle/dphoto/pkg/catalog"

	mock "github.com/stretchr/testify/mock"
)

// ListMediaIdsPort is an autogenerated mock type for the ListMediaIdsPort type
type ListMediaIdsPort struct {
	mock.Mock
}

// ListMediaIdsFromSelector provides a mock function with given fields: ctx, selector
func (_m *ListMediaIdsPort) ListMediaIdsFromSelector(ctx context.Context, selector []catalog.MediaSelector) ([]catalog.MediaId, error) {
	ret := _m.Called(ctx, selector)

	if len(ret) == 0 {
		panic("no return value specified for ListMediaIdsFromSelector")
	}

	var r0 []catalog.MediaId
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []catalog.MediaSelector) ([]catalog.MediaId, error)); ok {
		return rf(ctx, selector)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []catalog.MediaSelector) []catalog.MediaId); ok {
		r0 = rf(ctx, selector)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]catalog.MediaId)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, []catalog.MediaSelector) error); ok {
		r1 = rf(ctx, selector)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewListMediaIdsPort creates a new instance of ListMediaIdsPort. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewListMediaIdsPort(t interface {
	mock.TestingT
	Cleanup(func())
}) *ListMediaIdsPort {
	mock := &ListMediaIdsPort{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
