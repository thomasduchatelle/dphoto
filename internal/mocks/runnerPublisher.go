// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	backup "github.com/thomasduchatelle/dphoto/pkg/backup"
)

// runnerPublisher is an autogenerated mock type for the runnerPublisher type
type runnerPublisher struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *runnerPublisher) Execute(_a0 chan backup.FoundMedia, _a1 chan *backup.ProgressEvent) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(chan backup.FoundMedia, chan *backup.ProgressEvent) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newRunnerPublisher creates a new instance of runnerPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newRunnerPublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *runnerPublisher {
	mock := &runnerPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
