// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	catalog "github.com/thomasduchatelle/dphoto/pkg/catalog"

	mock "github.com/stretchr/testify/mock"
)

// AutoCreateAlbumObserver is an autogenerated mock type for the AutoCreateAlbumObserver type
type AutoCreateAlbumObserver struct {
	mock.Mock
}

type AutoCreateAlbumObserver_Expecter struct {
	mock *mock.Mock
}

func (_m *AutoCreateAlbumObserver) EXPECT() *AutoCreateAlbumObserver_Expecter {
	return &AutoCreateAlbumObserver_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: ctx, request
func (_m *AutoCreateAlbumObserver) Create(ctx context.Context, request catalog.CreateAlbumRequest) (*catalog.AlbumId, error) {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 *catalog.AlbumId
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.CreateAlbumRequest) (*catalog.AlbumId, error)); ok {
		return rf(ctx, request)
	}
	if rf, ok := ret.Get(0).(func(context.Context, catalog.CreateAlbumRequest) *catalog.AlbumId); ok {
		r0 = rf(ctx, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*catalog.AlbumId)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, catalog.CreateAlbumRequest) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AutoCreateAlbumObserver_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type AutoCreateAlbumObserver_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - ctx context.Context
//   - request catalog.CreateAlbumRequest
func (_e *AutoCreateAlbumObserver_Expecter) Create(ctx interface{}, request interface{}) *AutoCreateAlbumObserver_Create_Call {
	return &AutoCreateAlbumObserver_Create_Call{Call: _e.mock.On("Create", ctx, request)}
}

func (_c *AutoCreateAlbumObserver_Create_Call) Run(run func(ctx context.Context, request catalog.CreateAlbumRequest)) *AutoCreateAlbumObserver_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(catalog.CreateAlbumRequest))
	})
	return _c
}

func (_c *AutoCreateAlbumObserver_Create_Call) Return(_a0 *catalog.AlbumId, _a1 error) *AutoCreateAlbumObserver_Create_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *AutoCreateAlbumObserver_Create_Call) RunAndReturn(run func(context.Context, catalog.CreateAlbumRequest) (*catalog.AlbumId, error)) *AutoCreateAlbumObserver_Create_Call {
	_c.Call.Return(run)
	return _c
}

// NewAutoCreateAlbumObserver creates a new instance of AutoCreateAlbumObserver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAutoCreateAlbumObserver(t interface {
	mock.TestingT
	Cleanup(func())
}) *AutoCreateAlbumObserver {
	mock := &AutoCreateAlbumObserver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
