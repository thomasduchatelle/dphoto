// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	catalog "github.com/thomasduchatelle/dphoto/pkg/catalog"

	mock "github.com/stretchr/testify/mock"
)

// TransferMediasPort is an autogenerated mock type for the TransferMediasPort type
type TransferMediasPort struct {
	mock.Mock
}

// TransferMediasFromRecords provides a mock function with given fields: ctx, records
func (_m *TransferMediasPort) TransferMediasFromRecords(ctx context.Context, records catalog.MediaTransferRecords) (catalog.TransferredMedias, error) {
	ret := _m.Called(ctx, records)

	if len(ret) == 0 {
		panic("no return value specified for TransferMediasFromRecords")
	}

	var r0 catalog.TransferredMedias
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, catalog.MediaTransferRecords) (catalog.TransferredMedias, error)); ok {
		return rf(ctx, records)
	}
	if rf, ok := ret.Get(0).(func(context.Context, catalog.MediaTransferRecords) catalog.TransferredMedias); ok {
		r0 = rf(ctx, records)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(catalog.TransferredMedias)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, catalog.MediaTransferRecords) error); ok {
		r1 = rf(ctx, records)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTransferMediasPort creates a new instance of TransferMediasPort. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTransferMediasPort(t interface {
	mock.TestingT
	Cleanup(func())
}) *TransferMediasPort {
	mock := &TransferMediasPort{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
