// Code generated by mockery v2.3.0. DO NOT EDIT.

package backup

import (
	model "duchatelle.io/dphoto/dphoto/backup/model"
	mock "github.com/stretchr/testify/mock"
)

// MockMediaScannerAdapter is an autogenerated mock type for the MediaScannerAdapter type
type MockMediaScannerAdapter struct {
	mock.Mock
}

// FindMediaRecursively provides a mock function with given fields: volume, paths
func (_m *MockMediaScannerAdapter) FindMediaRecursively(volume model.VolumeToBackup, paths chan model.FoundMedia) (uint, uint, error) {
	ret := _m.Called(volume, paths)

	var r0 uint
	if rf, ok := ret.Get(0).(func(model.VolumeToBackup, chan model.FoundMedia) uint); ok {
		r0 = rf(volume, paths)
	} else {
		r0 = ret.Get(0).(uint)
	}

	var r1 uint
	if rf, ok := ret.Get(1).(func(model.VolumeToBackup, chan model.FoundMedia) uint); ok {
		r1 = rf(volume, paths)
	} else {
		r1 = ret.Get(1).(uint)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(model.VolumeToBackup, chan model.FoundMedia) error); ok {
		r2 = rf(volume, paths)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
