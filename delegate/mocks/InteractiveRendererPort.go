// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	ui "duchatelle.io/dphoto/dphoto/cmd/ui"
	mock "github.com/stretchr/testify/mock"
)

// InteractiveRendererPort is an autogenerated mock type for the InteractiveRendererPort type
type InteractiveRendererPort struct {
	mock.Mock
}

// Height provides a mock function with given fields:
func (_m *InteractiveRendererPort) Height() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Print provides a mock function with given fields: question
func (_m *InteractiveRendererPort) Print(question string) {
	_m.Called(question)
}

// ReadAnswer provides a mock function with given fields:
func (_m *InteractiveRendererPort) ReadAnswer() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Render provides a mock function with given fields: state
func (_m *InteractiveRendererPort) Render(state *ui.InteractiveViewState) error {
	ret := _m.Called(state)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ui.InteractiveViewState) error); ok {
		r0 = rf(state)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
