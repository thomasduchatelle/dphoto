// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	aclcore "github.com/thomasduchatelle/dphoto/pkg/acl/aclcore"
)

// SSOAuthenticator is an autogenerated mock type for the SSOAuthenticator type
type SSOAuthenticator struct {
	mock.Mock
}

// AuthenticateFromExternalIDProvider provides a mock function with given fields: identityJWT
func (_m *SSOAuthenticator) AuthenticateFromExternalIDProvider(identityJWT string) (*aclcore.Authentication, *aclcore.Identity, error) {
	ret := _m.Called(identityJWT)

	var r0 *aclcore.Authentication
	if rf, ok := ret.Get(0).(func(string) *aclcore.Authentication); ok {
		r0 = rf(identityJWT)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*aclcore.Authentication)
		}
	}

	var r1 *aclcore.Identity
	if rf, ok := ret.Get(1).(func(string) *aclcore.Identity); ok {
		r1 = rf(identityJWT)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*aclcore.Identity)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(identityJWT)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewSSOAuthenticator interface {
	mock.TestingT
	Cleanup(func())
}

// NewSSOAuthenticator creates a new instance of SSOAuthenticator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSSOAuthenticator(t mockConstructorTestingTNewSSOAuthenticator) *SSOAuthenticator {
	mock := &SSOAuthenticator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
