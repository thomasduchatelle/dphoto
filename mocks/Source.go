// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	backupmodel "github.com/thomasduchatelle/dphoto/dphoto/backup/backupmodel"

	testing "testing"
)

// Source is an autogenerated mock type for the Source type
type Source struct {
	mock.Mock
}

// Execute provides a mock function with given fields: medias
func (_m *Source) Execute(medias chan backupmodel.FoundMedia) (uint, uint, error) {
	ret := _m.Called(medias)

	var r0 uint
	if rf, ok := ret.Get(0).(func(chan backupmodel.FoundMedia) uint); ok {
		r0 = rf(medias)
	} else {
		r0 = ret.Get(0).(uint)
	}

	var r1 uint
	if rf, ok := ret.Get(1).(func(chan backupmodel.FoundMedia) uint); ok {
		r1 = rf(medias)
	} else {
		r1 = ret.Get(1).(uint)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(chan backupmodel.FoundMedia) error); ok {
		r2 = rf(medias)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewSource creates a new instance of Source. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewSource(t testing.TB) *Source {
	mock := &Source{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
