// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	io "io"

	archive "github.com/thomasduchatelle/dphoto/domain/archive"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// StoreAdapter is an autogenerated mock type for the StoreAdapter type
type StoreAdapter struct {
	mock.Mock
}

// Upload provides a mock function with given fields: values, content
func (_m *StoreAdapter) Upload(values archive.DestructuredKey, content io.Reader) (string, error) {
	ret := _m.Called(values, content)

	var r0 string
	if rf, ok := ret.Get(0).(func(archive.DestructuredKey, io.Reader) string); ok {
		r0 = rf(values, content)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(archive.DestructuredKey, io.Reader) error); ok {
		r1 = rf(values, content)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewStoreAdapter creates a new instance of StoreAdapter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewStoreAdapter(t testing.TB) *StoreAdapter {
	mock := &StoreAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
