// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	backupmodel "github.com/thomasduchatelle/dphoto/dphoto/backup/backupmodel"

	testing "testing"
)

// Downloader is an autogenerated mock type for the Downloader type
type Downloader struct {
	mock.Mock
}

// Execute provides a mock function with given fields: found
func (_m *Downloader) Execute(found backupmodel.FoundMedia) (backupmodel.FoundMedia, error) {
	ret := _m.Called(found)

	var r0 backupmodel.FoundMedia
	if rf, ok := ret.Get(0).(func(backupmodel.FoundMedia) backupmodel.FoundMedia); ok {
		r0 = rf(found)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(backupmodel.FoundMedia)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(backupmodel.FoundMedia) error); ok {
		r1 = rf(found)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewDownloader creates a new instance of Downloader. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewDownloader(t testing.TB) *Downloader {
	mock := &Downloader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
